{"version":3,"sources":["components/plasmic/plasmic__default_style.module.css","components/plasmic/blank_project/PlasmicHomepage.module.css","components/plasmic/blank_project/plasmic_blank_project.module.css","components/plasmic/blank_project/PlasmicHomepage.tsx","components/Homepage.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PlasmicHomepage__VariantProps","Array","PlasmicHomepage__ArgProps","PlasmicDescendants","root","box","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","className","defaultcss","data-plasmic-name","data-plasmic-override","data-plasmic-root","data-plasmic-for-node","classNames","projectcss","sty","PlasmicHomepage__RenderFunc","displayName","PlasmicHomepage","Object","assign","internalVariantProps","internalArgProps","Homepage_","ref","Homepage","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,oCAAoC,IAAM,sEAAsE,MAAQ,wEAAwE,SAAW,2EAA2E,OAAS,yEAAyE,KAAO,uEAAuE,IAAM,sEAAsE,GAAK,qEAAqE,GAAK,qEAAqE,GAAK,qEAAqE,GAAK,qEAAqE,GAAK,qEAAqE,GAAK,qEAAqE,QAAU,0EAA0E,GAAK,qEAAqE,GAAK,qEAAqE,OAAS,yEAAyE,GAAK,qEAAqE,mCAAqC,mEAAmE,WAAa,2CAA2C,qBAAuB,uD,mBCAjhDD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,mBCA7DD,EAAOC,QAAU,CAAC,WAAa,4C,iLCwClBC,EAAgC,IAAIC,MAIpCC,EAA4B,IAAID,MAmD7C,IAAME,EAAqB,CACzBC,KAAM,CAAC,OAAQ,OACfC,IAAK,CAAC,QAoCR,SAASC,EAAiDC,GAExD,IAAMC,EAAO,SACXC,GACC,IAAD,EACsCC,YAAiBD,EAAO,CAC5DE,KAAMJ,EACNK,gBAAgB,YAAKT,EAAmBI,IACxCM,qBAAsBX,EACtBY,yBAA0Bd,IAK5B,OA5FJ,SAAqCS,GAOyBA,EAApDM,SAAoDN,EAA1CO,KADhB,IACsBC,EAAoCR,EAApCQ,UAAWC,EAAyBT,EAAzBS,QAEnC,OAF4DT,EAAhBU,YAG1C,YAAC,WAAD,KACE,mBAAKC,UAAWC,wBACd,mBACEC,oBAAmB,OACnBC,wBAAuBN,EAAUb,KACjCoB,qBAAmB,EACnBC,wBAAuBP,EACvBE,UAAWM,YACTL,MACAM,aACAC,SAGF,mBACEN,oBAAmB,MACnBC,wBAAuBN,EAAUZ,IACjCe,UAAWM,YACTL,MACAA,aACAO,QAGD,yCA4DFC,CAA4B,CACjCd,SAXF,EACQA,SAWNC,KAZF,EACkBA,KAYhBC,UAbF,EACwBA,UAatBE,YANsBV,EAAhBU,YAOND,QAASX,KAQb,OAJEC,EAAKsB,YADU,SAAbvB,EACiB,kBAEnB,0BAAsCA,GAEjCC,EAGF,IAAMuB,EAAkBC,OAAOC,OAEpC3B,EAAkB,QAClB,CAEED,IAAKC,EAAkB,OAGvB4B,qBAAsBlC,EACtBmC,iBAAkBjC,I,QCrJtB,SAASkC,EAAU3B,EAAsB4B,GAgBvC,OAAO,cAACN,EAAD,aAAiB3B,KAAM,CAAEiC,QAAW5B,IAG7C,IACe6B,EADEC,aAAiBH,GC7BnBI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2deb6300.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"plasmic__default_style_all__3sG9G\",\"img\":\"plasmic__default_style_img__3l2Wd plasmic__default_style_all__3sG9G\",\"input\":\"plasmic__default_style_input__2xYgx plasmic__default_style_all__3sG9G\",\"textarea\":\"plasmic__default_style_textarea__e2K-X plasmic__default_style_all__3sG9G\",\"button\":\"plasmic__default_style_button__1V5zs plasmic__default_style_all__3sG9G\",\"code\":\"plasmic__default_style_code__1ReMw plasmic__default_style_all__3sG9G\",\"pre\":\"plasmic__default_style_pre__1pEPW plasmic__default_style_all__3sG9G\",\"h1\":\"plasmic__default_style_h1__2olhD plasmic__default_style_all__3sG9G\",\"h2\":\"plasmic__default_style_h2__1m5NQ plasmic__default_style_all__3sG9G\",\"h3\":\"plasmic__default_style_h3__xWs4w plasmic__default_style_all__3sG9G\",\"h4\":\"plasmic__default_style_h4__39vKd plasmic__default_style_all__3sG9G\",\"h5\":\"plasmic__default_style_h5__1sEmu plasmic__default_style_all__3sG9G\",\"h6\":\"plasmic__default_style_h6__MNLyy plasmic__default_style_all__3sG9G\",\"address\":\"plasmic__default_style_address__1Yp0H plasmic__default_style_all__3sG9G\",\"ol\":\"plasmic__default_style_ol__24TDx plasmic__default_style_all__3sG9G\",\"ul\":\"plasmic__default_style_ul__20SZ1 plasmic__default_style_all__3sG9G\",\"select\":\"plasmic__default_style_select__1XYRx plasmic__default_style_all__3sG9G\",\"li\":\"plasmic__default_style_li__1kiGb plasmic__default_style_all__3sG9G\",\"plasmic_default__component_wrapper\":\"plasmic__default_style_plasmic_default__component_wrapper__1aoLR\",\"__wab_text\":\"plasmic__default_style___wab_text__3FkrX\",\"plasmic_page_wrapper\":\"plasmic__default_style_plasmic_page_wrapper__1qPw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlasmicHomepage_root__uOeZd\",\"box\":\"PlasmicHomepage_box__1Vz9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_reset\":\"plasmic_blank_project_root_reset__3_pnV\"};","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: aZpqwzEqMU83o5JsBEvwHw\n// Component: FA8oTlX7FbY2\nimport * as React from \"react\";\n\nimport * as p from \"@plasmicapp/react-web\";\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants\n} from \"@plasmicapp/react-web\";\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\";\nimport * as defaultcss from \"../plasmic__default_style.module.css\"; // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_blank_project.module.css\"; // plasmic-import: aZpqwzEqMU83o5JsBEvwHw/projectcss\nimport * as sty from \"./PlasmicHomepage.module.css\"; // plasmic-import: FA8oTlX7FbY2/css\n\nexport type PlasmicHomepage__VariantMembers = {};\n\nexport type PlasmicHomepage__VariantsArgs = {};\ntype VariantPropType = keyof PlasmicHomepage__VariantsArgs;\nexport const PlasmicHomepage__VariantProps = new Array<VariantPropType>();\n\nexport type PlasmicHomepage__ArgsType = {};\ntype ArgPropType = keyof PlasmicHomepage__ArgsType;\nexport const PlasmicHomepage__ArgProps = new Array<ArgPropType>();\n\nexport type PlasmicHomepage__OverridesType = {\n  root?: p.Flex<\"div\">;\n  box?: p.Flex<\"div\">;\n};\n\nexport interface DefaultHomepageProps {\n  className?: string;\n}\n\nfunction PlasmicHomepage__RenderFunc(props: {\n  variants: PlasmicHomepage__VariantsArgs;\n  args: PlasmicHomepage__ArgsType;\n  overrides: PlasmicHomepage__OverridesType;\n  dataFetches?: PlasmicHomepage__Fetches;\n  forNode?: string;\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props;\n\n  return (\n    <React.Fragment>\n      <div className={defaultcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            defaultcss.all,\n            projectcss.root_reset,\n            sty.root\n          )}\n        >\n          <div\n            data-plasmic-name={\"box\"}\n            data-plasmic-override={overrides.box}\n            className={classNames(\n              defaultcss.all,\n              defaultcss.__wab_text,\n              sty.box\n            )}\n          >\n            {\"Welcome to your first page, wendel\"}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  ) as React.ReactElement | null;\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"box\"],\n  box: [\"box\"]\n} as const;\ntype NodeNameType = keyof typeof PlasmicDescendants;\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number];\ntype NodeDefaultElementType = {\n  root: \"div\";\n  box: \"div\";\n};\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\";\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicHomepage__OverridesType,\n  DescendantsType<T>\n>;\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicHomepage__VariantsArgs;\n    args?: PlasmicHomepage__ArgsType;\n    overrides?: NodeOverridesType<T>;\n    dataFetches?: PlasmicHomepage__Fetches;\n  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >;\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomepage__ArgProps,\n      internalVariantPropNames: PlasmicHomepage__VariantProps\n    });\n\n    const { dataFetches } = props;\n\n    return PlasmicHomepage__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName\n    });\n  };\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomepage\";\n  } else {\n    func.displayName = `PlasmicHomepage.${nodeName}`;\n  }\n  return func;\n}\n\nexport const PlasmicHomepage = Object.assign(\n  // Top-level PlasmicHomepage renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    box: makeNodeComponent(\"box\"),\n\n    // Metadata about props expected for PlasmicHomepage\n    internalVariantProps: PlasmicHomepage__VariantProps,\n    internalArgProps: PlasmicHomepage__ArgProps\n  }\n);\n\nexport default PlasmicHomepage;\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\";\nimport {\n  PlasmicHomepage,\n  DefaultHomepageProps\n} from \"./plasmic/blank_project/PlasmicHomepage\";\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\";\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface HomepageProps extends Omit<DefaultHomepageProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultHomepageProps altogether and have\n// total control over the props for your component.\ninterface HomepageProps extends DefaultHomepageProps {}\n\nfunction Homepage_(props: HomepageProps, ref: HTMLElementRefOf<\"div\">) {\n  // Use PlasmicHomepage to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomepage are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HomepageProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicHomepage root={{ ref }} {...props} />;\n}\n\nconst Homepage = React.forwardRef(Homepage_);\nexport default Homepage;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Homepage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}